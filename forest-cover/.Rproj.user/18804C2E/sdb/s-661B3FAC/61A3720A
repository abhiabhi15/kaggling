{
    "contents" : "source(\"classifiers/common.R\")\nlibrary(kernlab)\n\n## Cross Validation\ncvSVM <- function(){\n    svmFit <- train(forest_data[,-ncol(forest_data)], label_data, method = \"svmRadial\",\n                  tuneLength = 10, trControl = trainControl(method = \"cv\"))\n    print(svmFit)\n    cat(\" ---- Summary of SVM FIt ------\")\n    summary(svmFit)\n    filename= genPlotFileName(classifier=\"SVM\", content=\"Cross Validation Performance\")\n    png(filename=filename, width=600, height=520, units=\"px\")\n    plot(svmFit)\n}\n\n## Training using sample\ntrainSVM <- function(sigma){\n    model <- ksvm(Cover_Type~., data=train_data, type = \"C-svc\", kernel=\"rbfdot\", cross=10,  C=7, kpar=list(sigma=sigma))\n    pred <- predict(model, test_sample[,-ncol(test_sample)])\n    confusionMatrix(data=pred, reference=gtruth)\n}\n\n## Tuning SVM using libraries\ntuneSVM <- function(){\n    obj <- tune(svm, Cover_Type~., data = forest_data, ranges = list(gamma = 2^(-1:1), cost = 2^(2:4)),\n              tunecontrol = tune.control(sampling = \"fix\"))\n    summary(obj)\n    plot(obj)\n}\n\n## Performing Grid Search, for SVM Tuning\ngridSVM <- function(from, to, incr){\n    \n    i <- 1.1\n    accuracies <- c()\n    sigmaSeq <- seq(from, to, incr)\n    for(sigma in sigmaSeq){\n        cat(\"Running svm for sigma: \", sigma)\n        cm <- trainSVM(sigma)\n        file <- paste(paste(\"svm_output/svm_output_cm\",i,sep=\"\"), \"csv\" , sep=\".\")\n        write.csv(cm$table, file=file)    \n        file <- paste(paste(\"svm_output/svm_output_metrics\",i,sep=\"\"), \"csv\" , sep=\".\")\n        write.csv(t(cm$byClass), file=file)    \n        i <- i+.1\n        accuracies <- append(accuracies, cm$overall[1])\n    }\n    png(filename=\"SVM_Performance1.1.png\", width=980, height=520, units=\"px\")\n    plot(sigmaSeq, accuracies, main=\"SVM classification Accuracy Plot [RBF kernel]\", xlab=\"Sigma\", ylab=\"Accuracy\", pch=20, col=\"blue\")\n    dev.off()\n}\n\n# Prediction of Test Data\npredictSVM <- function(sigma){\n    modelT <- ksvm(Cover_Type~., data=forest_data , type = \"C-svc\", kernel=\"rbfdot\", cross=10,  C=7, kpar=list(sigma=sigma))\n    pred <- predict(modelT, test_data)\n    writeOutput(\"SVM\", \"../results/svm/svm_output1.csv\", pred)\n}\n",
    "created" : 1414888623697.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "841284418",
    "id" : "61A3720A",
    "lastKnownWriteTime" : 1415061753,
    "path" : "~/dstools/kaggling/forest-cover/code/classifiers/svm.R",
    "project_path" : "code/classifiers/svm.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}