{
    "contents" : "source(\"classifiers/common.R\")\nlibrary(\"neuralnet\")\n\n## Cross Validation\ncvNNet <- function(){\n   nnFit <- train(forest_data[,-ncol(forest_data)], label_data, method = \"nnet\",\n                  tuneLength = 10, trControl = trainControl(method = \"cv\"))\n}\n\n## Training using sample [Categorical]\ntrainNNet <- function(hidden, threshold){\n    model <- neuralnet(Cover_Type ~ Elevation + Aspect + Slope +\n                           Horizontal_Distance_To_Hydrology + Vertical_Distance_To_Hydrology +\n                           Horizontal_Distance_To_Roadways + Hillshade_9am + Hillshade_Noon +\n                           Hillshade_3pm + Horizontal_Distance_To_Fire_Points + Area_Of_Wilderness + Soil_Type\n                         , train_data, hidden = hidden, linear.output = FALSE, threshold =threshold)\n    pred <- compute(model, test_sample[,-ncol(test_sample)])\n    pred <- round(pred$net.result)\n    pred\n    #confusionMatrix(pred, gtruth)\n}\n\n## Tuning RF using libraries\ntuneNNet <- function(){\n  \n}\n\n## Performing Grid Search, for Neural Network Tuning\ngridNNet <- function(from, to, incr){\n  \n}\n\n# Prediction of Test Data\npredictNNet <- function(){\n    \n}\n",
    "created" : 1414986696560.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1394040664",
    "id" : "37AC4AD6",
    "lastKnownWriteTime" : 1414996590,
    "path" : "~/dstools/kaggling/forest-cover/code/classifiers/nnet.R",
    "project_path" : "code/classifiers/nnet.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}